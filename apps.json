local apps = [
  {
    "name": "miniflux",
    "image": "docker.io/miniflux/miniflux:latest",
    "ports": [
      {
        "containerPort": 8080,
        "name": "http"
      }
    ],
    "env": [
      {
        "name": "DATABASE_URL",
        "value": ""
      },
      {
        "name": "AUTH_PROXY_HEADER",
        "value": "X-Forwarded-User"
      },
      {
        "name": "AUTH_PROXY_USER_CREATION",
        "value": "true"
      },
      {
        "name": "METRICS_COLLECTOR",
        "value": "1"
      },
      {
        "name": "METRICS_ALLOWED_NETWORKS",
        "value": "0.0.0.0/0,::/0"
      }
    ]
  },
  {
    image: "griffinhtdocker/ip-server:latest",
    name: "ip-server",
    ports: [
      {
        containerPort: 80,
        name: "http"
      }
    ]
  },
  {
    image: "quay.io/redlib/redlib:latest",
    name: "redlib",
    ports: [
      {
        containerPort: 8080,
        name: "http"
      }
    ]
  },
  {
    image: "kennethreitz/httpbin",
    name: "httpbin",
    ports: [
      {
        containerPort: 80,
        name: "http"
      }
    ],
  },
  {
    "name": "speedtest",
    "image": "ghcr.io/librespeed/speedtest:latest",
    "env": [
      {
        "name": "MODE",
        "value": "standalone"
      }
    ],
    "ports": [
      {
        "containerPort": 80,
        "name": "http"
      }
    ]
  },
  {
    "name": "searxng",
    "image": "docker.io/searxng/searxng",
    "ports": [
        {
            "containerPort": 8080,
            "name": "http"
        }
    ]
  }
];

{
  apps: apps,
  iperf_netpol: {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": {
      "name": "iperf"
    },
    "spec": {
      "podSelector": {
        "matchLabels": {
          "app.kubernetes.io/name": "iperf"
        }
      },
      "policyTypes": [
        "Ingress"
      ],
      "ingress": [
        {
          "from": []
        }
      ]
    }
  },
  iperf_service: {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "iperf"
    },
    "spec": {
      "selector": {
        "app.kubernetes.io/name": "iperf"
      },
      "type": "LoadBalancer",
      "ports": [
        {
          "port": 5201,
          "targetPort": "iperf"
        }
      ],
      "loadBalancerIP": "35.231.59.239"
    }
  },
  iperf_app: {
    "name": "iperf",
    "image": "docker.io/griffinhtdocker/iperf",
    "ports": [
      {
        "containerPort": 5201,
        "name": "iperf"
      }
    ],
    "command": [
      "iperf3",
      "--server"
    ]
  }
}
