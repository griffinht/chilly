#!/bin/sh

# todo https://www.google.com/search?client=firefox-b-1-d&q=git+embed+ci+runs+in+git+commit
set -e

fail="❌"
pass="✅"

old() {
    echo "$@"
    message="$(git show --format=%s -s)"
    case "$message" in
        *"$fail")
            echo skipping tests
            ;;
        *"$pass")
            echo skipping tests
            ;;
        *)
            ;;
    esac
    exit 1
}


tmp="$(mktemp -d)"
git clone . "$tmp"

mytest() {
    (
    set -xe
    cd public
    ls
    cat Makefile
    ./test.sh
)
}

old="$PWD"
cd "$tmp"
if mytest; then
    status="$pass"
else
    status="$fail"
fi
cd "$old"

git commit --allow-empty --amend --only -m "$(git show --format=%s -s) $status"

if [ "$status" = "$fail" ]; then
    exit 1
fi

exit 0
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Redirect output to stderr.
#exec 1>&2

