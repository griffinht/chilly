local k = import "public/Kubernetes.json";

k.Deployment("miniflux", [
  k.Container({
    name: "miniflux",
    image: "docker.io/miniflux/miniflux:latest",
    ports: [
      {
        containerPort: 80,
        name: "http"
      }
    ],
    env: [
      {
        name: "DATABASE_URL",
        value: "postgres://localhost",
        /*
        valueFrom: {
          secretKeyRef: {
            name: "miniflux",
            key: "DATABASE_URL"
          }
        }*/
      },
      {
        name: "AUTH_PROXY_HEADER",
        value: "X-Forwarded-User"
      },
      {
        name: "AUTH_PROXY_USER_CREATION",
        value: "true"
      },
      {
        name: "METRICS_COLLECTOR",
        value: "1"
      },
      {
        name: "METRICS_ALLOWED_NETWORKS",
        value: "0.0.0.0/0,::/0"
      },
      {
        name: "PORT",
        value: "80"
      }
    ],
    readinessProbe: {
      httpGet: {
        path: "/healthcheck",
        port: "http"
      }
    }
  }),
  k.Container({
    name: "postgres",
    image: "tailscale/tailscale",
    env: [
      {
        name: "TS_USERSPACE",
        value: "true",
      },
      {
        name: "TS_KUBE_SECRET",
        value: "",
      },
      {
        name: "TS_AUTHKEY",
        valueFrom: {
          secretKeyRef: {
            name: "tailscale",
            key: "TS_AUTHKEY",
          }
        }
      }
    ]
  }),
])
