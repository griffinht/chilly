local caddy(configMap) = {
  apiVersion: 'apps/v1',
  kind: 'Deployment',
  metadata: {
    name: 'caddy',
    labels: {
      'app.kubernetes.io/name': 'caddy',
    },
  },
  spec: {
    //replicas: 1,
    selector: {
      matchLabels: {
        'app.kubernetes.io/name': 'caddy',
      },
    },
    /*
    strategy: {
      // multiple instances of caddy can't run at the same time
      type: 'Recreate',
    },*/
    template: {
      metadata: {
        labels: {
          'app.kubernetes.io/name': 'caddy',
        },
      },
      spec: {
        containers: [
          {
            name: 'caddy',
            image: 'docker.io/caddy',
            env: [
              {
                name: 'HTTP_PORT',
                value: '80',
              },
              {
                name: 'HTTPS_PORT',
                value: '443',
              },
              {
                name: 'DOMAIN',
                valueFrom: {
                  configMapKeyRef: {
                    name: 'config',
                    key: 'domain',
                  },
                },
              },
            ],
            ports: [
              {
                containerPort: 9999,
                name: 'healthcheck',
              },
              {
                containerPort: 80,
                name: 'http',
              },
              {
                containerPort: 443,
                name: 'https',
              },
            ],
            readinessProbe: {
              httpGet: {
                path: "/",
                port: "healthcheck"
              }
            },
            volumeMounts: [
              {
                // holds certificate state
                mountPath: '/data',
                name: 'state',
              },
              {
                mountPath: '/etc/caddy',
                name: 'config',
              },
            ],
            resources: {
              requests: {
                memory: '512Mi',
                cpu: '250m',
              },
            },
          },
        ],
        volumes: [
          {
            name: 'state',
            persistentVolumeClaim: {
              claimName: 'caddy',
            },
          },
          {
            name: 'config',
            configMap: {
              name: configMap,
              items: [
                {
                  key: 'Caddyfile',
                  path: 'Caddyfile',
                },
              ],
            },
          },
        ],
      },
    },
  },
};

caddy
