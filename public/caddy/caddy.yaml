apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: caddy
spec:
  resources:
    requests:
      storage: 10Mi
  accessModes:
    - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy
  labels:
    app.kubernetes.io/name: caddy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: caddy
  strategy:
    # multiple instances of caddy can't run at the same time
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: caddy
    spec:
      containers:
        - name: caddy
          image: docker.io/caddy
          env:
            - name: HTTP_PORT
              value: '80'
            - name: HTTPS_PORT
              value: '443'
            - name: DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: domain
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          volumeMounts:
            # holds certificate state
          - mountPath: /data
            name: state
          - mountPath: /etc/caddy
            name: config
          resources:
            requests:
              memory: 512Mi
              cpu: 250m
      volumes:
        - name: state
          persistentVolumeClaim:
            claimName: caddy
        - name: config
          configMap:
            name: caddy-v10
            items:
              - key: Caddyfile
                path: Caddyfile
---
apiVersion: v1
kind: Service
metadata:
  name: caddy
spec:
  selector:
    app.kubernetes.io/name: caddy
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  loadBalancerIP: 34.74.21.105 
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: caddy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: caddy
  policyTypes:
    - Ingress
  ingress:
    - from: []
