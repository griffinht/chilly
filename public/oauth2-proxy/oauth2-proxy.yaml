apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  labels:
    app.kubernetes.io/name: oauth2-proxy
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oauth2-proxy
    spec:
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        env:
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: oauth2-proxy
                key: OAUTH2_PROXY_COOKIE_SECRET
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: oauth2-proxy
                key: OAUTH2_PROXY_CLIENT_SECRET
        args:
          - --provider=oidc
            # 127.0.0.1 by default
          - --http-address=http://0.0.0.0:4180
            #- --scope="openid name email"
          - --client-id=oauth2-proxy
          - --oidc-issuer-url=https://keycloak.chilly.griffinht.com/realms/chilly
          - --redirect-url=https://oauth2-proxy.chilly.griffinht.com/oauth2/callback
          - --email-domain=*
            # todo set to false?
          - --insecure-oidc-allow-unverified-email=true
          #- --allowed-role=<realm role name> // Optional, required realm role
          #- --allowed-role=<client id>:<client role name> // Optional, required client role
          #- --allowed-group=</group name> // Optional, requires group client scope
          # complains when provider has this enabled but we don't use it
          # todo make sure we are using it when the provider has this!
          - --code-challenge-method=S256
          - --reverse-proxy=true
          - --cookie-domain=chilly.griffinht.com
          - --whitelist-domain=.chilly.griffinht.com
            # todo add x real ip
        ports:
        - containerPort: 4180
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
spec:
  selector:
    app.kubernetes.io/name: oauth2-proxy
  ports:
  - port: 80
    targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: oauth2-proxy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
  policyTypes:
    - Ingress
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: caddy
